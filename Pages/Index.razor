@page "/"
@using NPOI.SS.UserModel
@using NPOI.XSSF.UserModel
@using System.IO
@using NPOITable.Data
@inject IJSRuntime jsruntime

<h1>Excel Example</h1>

<button class="btn btn-primary" @onclick ="@(async()=>{ await Generate();})" >Genereate Excel</button>


@code{
    List<Student> oStudents = new List<Student>();
    private List<Student> GetStudents()
    {
        oStudents = new List<Student>();
        for(int i = 1; i<=9; i++)
        {
            oStudents.Add(new Student()
                {
                    StudentId = i,
                    Name = "Stu" + i,
                    Roll = "100" + i
                });
        }
        return oStudents;
    }

    public async Task Generate()
    {
        oStudents = GetStudents();
        IWorkbook workbook = new XSSFWorkbook();
        var dataFormat = workbook.CreateDataFormat();
        var dataStyle = workbook.CreateCellStyle();
        dataStyle.DataFormat = dataFormat.GetFormat("MM/dd/yyyy HH:mm:ss");

        ISheet worksheet = workbook.CreateSheet("Sheet1");
        int rowNumber = 0;
        IRow row = worksheet.CreateRow(rowNumber++);

        //Table Header
        ICell cell = row.CreateCell(0);
        cell.SetCellValue("StudentId");

        cell = row.CreateCell(1);
        cell.SetCellValue("Name");

        cell = row.CreateCell(2);
        cell.SetCellValue("Roll");

        //Table Body
        foreach(var ostudent in oStudents)
        {
            row = worksheet.CreateRow(rowNumber++);

            cell = row.CreateCell(0);
            cell.SetCellValue(ostudent.StudentId);

            cell = row.CreateCell(1);
            cell.SetCellValue(ostudent.Name);

            cell = row.CreateCell(2);
            cell.SetCellValue(ostudent.Roll);
        }

        MemoryStream ms = new MemoryStream();
        workbook.Write(ms);
        byte[] bytes = ms.ToArray();
        ms.Close();
        await jsruntime.SaveAsFileAsync("Student List", bytes, "application/vnd.ms-excel");

    }

}